import dataclasses
import importlib.util
from typing import Dict, List, Union

if not importlib.util.find_spec("ale_py"):
    raise ImportError("ale_py not found")


import ale_py


@dataclasses.dataclass(frozen=True)
class GameMetadata:
    _: dataclasses.KW_ONLY
    minimal_action_set: List[ale_py.Action]
    modes: List[int]
    difficulties: List[int]
    lives: int
    """
    RAM annotations:
        key: state variable name
        value: the element in the RAM array where the value of that state variable is stored
                e.g. the value of the x coordinate of the player in asteroids is stored in the 73rd (counting up from 0)
                element of the RAM array (when the player in asteroids moves horizontally, ram_array[73] should change
                in value correspondingly)
    Source: https://github.com/mila-iqia/atari-representation-learning
    """
    annotations: Dict[str, Union[int, List[int]]] = dataclasses.field(default_factory=dict)

    @property
    def legal_action_set(self) -> List[ale_py.Action]:
        return [
            ale_py.Action.NOOP,
            ale_py.Action.FIRE,
            ale_py.Action.UP,
            ale_py.Action.RIGHT,
            ale_py.Action.LEFT,
            ale_py.Action.DOWN,
            ale_py.Action.UPRIGHT,
            ale_py.Action.UPLEFT,
            ale_py.Action.DOWNRIGHT,
            ale_py.Action.DOWNLEFT,
            ale_py.Action.UPFIRE,
            ale_py.Action.RIGHTFIRE,
            ale_py.Action.LEFTFIRE,
            ale_py.Action.DOWNFIRE,
            ale_py.Action.UPRIGHTFIRE,
            ale_py.Action.UPLEFTFIRE,
            ale_py.Action.DOWNRIGHTFIRE,
            ale_py.Action.DOWNLEFTFIRE,
        ]


GAMES: Dict[str, GameMetadata] = {}


Adventure = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0, 1, 2],
    difficulties=[0, 1, 2, 3],
)

AirRaid = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=1,
    modes=[1, 2, 3, 4, 5, 6, 7, 8],
    difficulties=[0],
)

Alien = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0, 1, 2, 3],
    difficulties=[0, 1, 2, 3],
)

Amidar = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0, 3],
)

Assault = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0],
)

Asterix = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
)

Asteroids = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
    ],
    lives=4,
    modes=[
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        128,
    ],
    difficulties=[0, 3],
    annotations={
        "enemy_asteroids_y": [3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19],
        "enemy_asteroids_x": [
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
        ],
        "player_x": 73,
        "player_y": 74,
        "num_lives_direction": 60,
        "player_score_high": 61,
        "player_score_low": 62,
        "player_missile_x1": 83,
        "player_missile_x2": 84,
        "player_missile_y1": 86,
        "player_missile_y2": 87,
        "player_missile1_direction": 89,
        "player_missile2_direction": 90,
    },
)

Atlantis = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=6,
    modes=[0, 1, 2, 3],
    difficulties=[0],
)

Atlantis2 = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=6,
    modes=[0],
    difficulties=[0],
)

Backgammon = GameMetadata(
    minimal_action_set=[
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
    ],
    lives=1,
    modes=[0],
    difficulties=[3],
)

BankHeist = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0, 4, 8, 12, 16, 20, 24, 28],
    difficulties=[0, 1, 2, 3],
)

BasicMath = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=1,
    modes=[5, 6, 7, 8],
    difficulties=[0, 2, 3],
)

BattleZone = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=5,
    modes=[1, 2, 3],
    difficulties=[0],
    annotations={
        "blue_tank_facing_direction": 46,
        "blue_tank_size_y": 47,
        "blue_tank_x": 48,
        "blue_tank2_facing_direction": 52,
        "blue_tank2_size_y": 53,
        "blue_tank2_x": 54,
        "num_lives": 58,
        "missile_y": 105,
        "compass_needles_angle": 84,
        "angle_of_tank": 4,
        "left_tread_position": 59,
        "right_tread_position": 60,
        "crosshairs_color": 108,
        "score": 29,
    },
)

BeamRider = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0, 1],
)

Berzerk = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18],
    difficulties=[0],
    annotations={
        "player_x": 19,
        "player_y": 11,
        "player_direction": 14,
        "player_missile_x": 22,
        "player_missile_y": 23,
        "player_missile_direction": 21,
        "robot_missile_direction": 26,
        "robot_missile_x": 29,
        "robot_missile_y": 30,
        "num_lives": 90,
        "robots_killed_count": 91,
        "game_level": 92,
        "enemy_evilOtto_x": 46,
        "enemy_evilOtto_y": 89,
        "enemy_robots_x": [65, 66, 67, 68, 69, 70, 71, 72],
        "enemy_robots_y": [56, 57, 58, 59, 60, 61, 62, 63, 64],
        "player_score": [93, 94, 95],
    },
)

Blackjack = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.DOWN,
    ],
    lives=1,
    modes=[0],
    difficulties=[0, 1, 2, 3],
)

Bowling = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=0,
    modes=[0, 2, 4],
    difficulties=[0, 1],
    annotations={
        "ball_x": 30,
        "ball_y": 41,
        "player_x": 29,
        "player_y": 40,
        "frame_number_display": 36,
        "pin_existence": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66],
        "score": 33,
    },
)

Boxing = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0, 1, 2, 3],
    annotations={
        "player_x": 32,
        "player_y": 34,
        "enemy_x": 33,
        "enemy_y": 35,
        "enemy_score": 19,
        "clock": 17,
        "player_score": 18,
    },
)

Breakout = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
    ],
    lives=5,
    modes=[0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44],
    difficulties=[0, 1],
    annotations={
        "ball_x": 99,
        "ball_y": 101,
        "player_x": 72,
        "blocks_hit_count": 77,
        "block_bit_map": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
        ],
        "score": 84,
    },
)

Carnival = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0],
)

Casino = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.DOWN,
    ],
    lives=1,
    modes=[0, 2, 3],
    difficulties=[0, 1, 2, 3],
)

Centipede = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[22, 86],
    difficulties=[0],
)

ChopperCommand = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0, 2],
    difficulties=[0, 1],
)

CrazyClimber = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=5,
    modes=[0, 1, 2, 3],
    difficulties=[0, 1],
)

Crossbow = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0, 2, 4, 6],
    difficulties=[0, 1],
)

Darkchambers = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0],
    difficulties=[0],
)

Defender = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[1, 2, 3, 4, 5, 6, 7, 8, 9, 16],
    difficulties=[0, 1],
)

DemonAttack = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=1,
    modes=[1, 3, 5, 7],
    difficulties=[0, 1],
    annotations={
        "level": 62,
        "player_x": 22,
        "enemy_x1": 17,
        "enemy_x2": 18,
        "enemy_x3": 19,
        "missile_y": 21,
        "enemy_y1": 69,
        "enemy_y2": 70,
        "enemy_y3": 71,
        "num_lives": 114,
    },
)

DonkeyKong = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=2,
    modes=[0],
    difficulties=[0],
)

DoubleDunk = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    difficulties=[0],
)

Earthworld = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0],
    difficulties=[0],
)

ElevatorAction = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0],
)

Enduro = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0],
)

Entombed = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0],
    difficulties=[0, 2],
)

Et = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0, 1, 2],
    difficulties=[0, 1, 2, 3],
)

FishingDerby = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0, 1, 2, 3],
)

FlagCapture = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[8, 9, 10],
    difficulties=[0],
)

Freeway = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.DOWN,
    ],
    lives=0,
    modes=[0, 1, 2, 3, 4, 5, 6, 7],
    difficulties=[0, 1],
    annotations={
        "player_y": 14,
        "score": 103,
        "enemy_car_x": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117],
    },
)

Frogger = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=4,
    modes=[0, 1, 2],
    difficulties=[0, 1],
)

Frostbite = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0, 2],
    difficulties=[0],
    annotations={
        "top_row_iceflow_x": 34,
        "second_row_iceflow_x": 33,
        "third_row_iceflow_x": 32,
        "fourth_row_iceflow_x": 31,
        "enemy_bear_x": 104,
        "num_lives": 76,
        "igloo_blocks_count": 77,
        "enemy_x": [84, 85, 86, 87],
        "player_x": 102,
        "player_y": 100,
        "player_direction": 4,
        "score": [72, 73, 74],
    },
)

Galaxian = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=4,
    modes=[1, 2, 3, 4, 5, 6, 7, 8, 9],
    difficulties=[0, 1],
)

Gopher = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0, 2],
    difficulties=[0, 1],
)

Gravitar = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=6,
    modes=[0, 1, 2, 3, 4],
    difficulties=[0],
)

Hangman = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0, 1, 2, 3],
    difficulties=[0, 1],
)

HauntedHouse = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=9,
    modes=[0, 1, 2, 3, 4, 5, 6, 7, 8],
    difficulties=[0, 1],
)

Hero = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0, 1, 2, 3, 4],
    difficulties=[0],
    annotations={
        "player_x": 27,
        "player_y": 31,
        "power_meter": 43,
        "room_number": 28,
        "level_number": 117,
        "dynamite_count": 50,
        "score": [56, 57],
    },
)

HumanCannonball = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0, 1, 2, 3, 4, 5, 6, 7],
    difficulties=[0, 1],
)

IceHockey = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0, 2],
    difficulties=[0, 1, 2, 3],
)

Jamesbond = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=6,
    modes=[0, 1],
    difficulties=[0],
)

JourneyEscape = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0, 1],
)

Kaboom = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
    ],
    lives=1,
    modes=[0],
    difficulties=[0],
)

Kangaroo = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0, 1],
    difficulties=[0],
)

KeystoneKapers = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
)

KingKong = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=3,
    modes=[0, 1, 2, 3],
    difficulties=[0],
)

Klax = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0, 1, 2],
    difficulties=[0],
)

Koolaid = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=0,
    modes=[0],
    difficulties=[0],
)

Krull = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
)

KungFuMaster = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0],
)

LaserGates = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0],
    difficulties=[0],
)

LostLuggage = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=3,
    modes=[0, 1],
    difficulties=[0, 1],
)

MarioBros = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=5,
    modes=[0, 2, 4, 6],
    difficulties=[0],
)

MiniatureGolf = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0],
    difficulties=[0, 1],
)

MontezumaRevenge = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=6,
    modes=[0],
    difficulties=[0],
    annotations={
        "room_number": 3,
        "player_x": 42,
        "player_y": 43,
        "player_direction": 52,
        "enemy_skull_x": 47,
        "enemy_skull_y": 46,
        "key_monster_x": 44,
        "key_monster_y": 45,
        "level": 57,
        "num_lives": 58,
        "items_in_inventory_count": 61,
        "room_state": 62,
        "score_0": 19,
        "score_1": 20,
        "score_2": 21,
    },
)

MrDo = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=4,
    modes=[0, 1, 2, 3],
    difficulties=[0],
)

MsPacman = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=3,
    modes=[0, 1, 2, 3],
    difficulties=[0],
    annotations={
        "enemy_sue_x": 6,
        "enemy_inky_x": 7,
        "enemy_pinky_x": 8,
        "enemy_blinky_x": 9,
        "enemy_sue_y": 12,
        "enemy_inky_y": 13,
        "enemy_pinky_y": 14,
        "enemy_blinky_y": 15,
        "player_x": 10,
        "player_y": 16,
        "fruit_x": 11,
        "fruit_y": 17,
        "ghosts_count": 19,
        "player_direction": 56,
        "dots_eaten_count": 119,
        "player_score": 120,
        "num_lives": 123,
    },
)

NameThisGame = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[8, 24, 40],
    difficulties=[0, 1],
)

Othello = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=1,
    modes=[0, 1, 2],
    difficulties=[0, 2],
)

Pacman = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=4,
    modes=[0, 1, 2, 3, 4, 5, 6, 7],
    difficulties=[0, 1],
)

Phoenix = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=5,
    modes=[0],
    difficulties=[0],
)

Pitfall = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
    annotations={
        "player_x": 97,
        "player_y": 105,
        "enemy_logs_x": 98,
        "enemy_scorpion_x": 99,
        "bottom_of_rope_y": 18,
        "clock_sec": 89,
        "clock_min": 88,
    },
)

Pitfall2 = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0],
    difficulties=[0],
)

Pong = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=0,
    modes=[0, 1],
    difficulties=[0, 1, 2, 3],
    annotations={
        "player_y": 51,
        "player_x": 46,
        "enemy_y": 50,
        "enemy_x": 45,
        "ball_x": 49,
        "ball_y": 54,
        "enemy_score": 13,
        "player_score": 14,
    },
)

Pooyan = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=3,
    modes=[10, 30, 50, 70],
    difficulties=[0],
)

PrivateEye = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0, 1, 2, 3, 4],
    difficulties=[0, 1, 2, 3],
    annotations={
        "player_x": 63,
        "player_y": 86,
        "room_number": 92,
        "clock": [67, 69],
        "player_direction": 58,
        "score": [73, 74],
        "dove_x": 48,
        "dove_y": 39,
    },
)

Qbert = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=4,
    modes=[0],
    difficulties=[0, 1],
    annotations={
        "player_x": 43,
        "player_y": 67,
        "player_column": 35,
        "red_enemy_column": 69,
        "green_enemy_column": 105,
        "score": [89, 90, 91],
        "tile_color": [
            21,
            52,
            54,
            83,
            85,
            87,
            98,
            100,
            102,
            104,
            1,
            3,
            5,
            7,
            9,
            32,
            34,
            36,
            38,
            40,
            42,
        ],
    },
)

Riverraid = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0, 1],
    annotations={
        "player_x": 51,
        "missile_x": 117,
        "missile_y": 50,
        "fuel_meter_high": 55,
        "fuel_meter_low": 56,
    },
)

RoadRunner = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
)

Robotank = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0],
)

Seaquest = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0, 1],
    annotations={
        "enemy_obstacle_x": [30, 31, 32, 33],
        "player_x": 70,
        "player_y": 97,
        "diver_or_enemy_missile_x": [71, 72, 73, 74],
        "player_direction": 86,
        "player_missile_direction": 87,
        "oxygen_meter_value": 102,
        "player_missile_x": 103,
        "score": [57, 58],
        "num_lives": 59,
        "divers_collected_count": 62,
    },
)

SirLancelot = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
)

Skiing = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
    ],
    lives=0,
    modes=[0],
    difficulties=[0],
    annotations={
        "player_x": 25,
        "clock_m": 104,
        "clock_s": 105,
        "clock_ms": 106,
        "score": 107,
        "object_y": [87, 88, 89, 90, 91, 92, 93],
    },
)

Solaris = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0],
)

SpaceInvaders = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
    difficulties=[0, 1],
    annotations={
        "invaders_left_count": 17,
        "player_score": 104,
        "num_lives": 73,
        "player_x": 28,
        "enemies_x": 26,
        "missiles_y": 9,
        "enemies_y": 24,
    },
)

SpaceWar = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
    difficulties=[0],
)

StarGunner = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=5,
    modes=[0, 1, 2, 3],
    difficulties=[0],
)

Superman = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[0],
    difficulties=[0, 1, 2, 3],
)

Surround = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=1,
    modes=[0, 2],
    difficulties=[0, 1, 2, 3],
)

Tennis = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=0,
    modes=[0, 2],
    difficulties=[0, 1, 2, 3],
    annotations={
        "enemy_x": 27,
        "enemy_y": 25,
        "enemy_score": 70,
        "ball_x": 16,
        "ball_y": 17,
        "player_x": 26,
        "player_y": 24,
        "player_score": 69,
    },
)

Tetris = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
    ],
    lives=0,
    modes=[0],
    difficulties=[0],
)

TicTacToe3D = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=1,
    modes=[0, 1, 2, 3, 4, 5, 6, 7, 8],
    difficulties=[0, 2],
)

TimePilot = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=5,
    modes=[0],
    difficulties=[0, 1, 2],
)

Trondead = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=5,
    modes=[0],
    difficulties=[0, 1],
)

Turmoil = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0, 1, 2, 3, 4, 5, 6, 7, 8],
    difficulties=[0],
)

Tutankham = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0, 4, 8, 12],
    difficulties=[0],
)

UpNDown = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=5,
    modes=[0],
    difficulties=[0, 1, 2, 3],
)

Venture = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0],
    difficulties=[0, 1, 2, 3],
    annotations={
        "sprite0_y": 20,
        "sprite1_y": 21,
        "sprite2_y": 22,
        "sprite3_y": 23,
        "sprite4_y": 24,
        "sprite5_y": 25,
        "sprite0_x": 79,
        "sprite1_x": 80,
        "sprite2_x": 81,
        "sprite3_x": 82,
        "sprite4_x": 83,
        "sprite5_x": 84,
        "player_x": 85,
        "player_y": 26,
        "current_room": 90,
        "num_lives": 70,
        "score_1_2": 71,
        "score_3_4": 72,
    },
)

VideoCheckers = GameMetadata(
    minimal_action_set=[
        ale_py.Action.FIRE,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=1,
    modes=[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    difficulties=[0],
)

VideoPinball = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
    ],
    lives=3,
    modes=[0, 2],
    difficulties=[0, 1],
    annotations={
        "ball_x": 67,
        "ball_y": 68,
        "player_left_paddle_y": 98,
        "player_right_paddle_y": 102,
        "score_1": 48,
        "score_2": 50,
    },
)

Videochess = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
    ],
    lives=1,
    modes=[0, 1, 2, 3, 4],
    difficulties=[0],
)

Videocube = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[
        0,
        1,
        2,
        100,
        101,
        102,
        200,
        201,
        202,
        300,
        301,
        302,
        400,
        401,
        402,
        500,
        501,
        502,
        600,
        601,
        602,
        700,
        701,
        702,
        800,
        801,
        802,
        900,
        901,
        902,
        1000,
        1001,
        1002,
        1100,
        1101,
        1102,
        1200,
        1201,
        1202,
        1300,
        1301,
        1302,
        1400,
        1401,
        1402,
        1500,
        1501,
        1502,
        1600,
        1601,
        1602,
        1700,
        1701,
        1702,
        1800,
        1801,
        1802,
        1900,
        1901,
        1902,
        2000,
        2001,
        2002,
        2100,
        2101,
        2102,
        2200,
        2201,
        2202,
        2300,
        2301,
        2302,
        2400,
        2401,
        2402,
        2500,
        2501,
        2502,
        2600,
        2601,
        2602,
        2700,
        2701,
        2702,
        2800,
        2801,
        2802,
        2900,
        2901,
        2902,
        3000,
        3001,
        3002,
        3100,
        3101,
        3102,
        3200,
        3201,
        3202,
        3300,
        3301,
        3302,
        3400,
        3401,
        3402,
        3500,
        3501,
        3502,
        3600,
        3601,
        3602,
        3700,
        3701,
        3702,
        3800,
        3801,
        3802,
        3900,
        3901,
        3902,
        4000,
        4001,
        4002,
        4100,
        4101,
        4102,
        4200,
        4201,
        4202,
        4300,
        4301,
        4302,
        4400,
        4401,
        4402,
        4500,
        4501,
        4502,
        4600,
        4601,
        4602,
        4700,
        4701,
        4702,
        4800,
        4801,
        4802,
        4900,
        4901,
        4902,
        5000,
        5001,
        5002,
    ],
    difficulties=[0, 1],
)

WizardOfWor = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
    ],
    lives=3,
    modes=[0],
    difficulties=[0, 1],
)

WordZapper = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=1,
    modes=[
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
    ],
    difficulties=[0, 1, 2, 3],
)

YarsRevenge = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=4,
    modes=[0, 32, 64, 96],
    difficulties=[0, 1],
    annotations={
        "player_x": 32,
        "player_y": 31,
        "player_missile_x": 38,
        "player_missile_y": 37,
        "enemy_x": 43,
        "enemy_y": 42,
        "enemy_missile_x": 47,
        "enemy_missile_y": 46,
    },
)

Zaxxon = GameMetadata(
    minimal_action_set=[
        ale_py.Action.NOOP,
        ale_py.Action.FIRE,
        ale_py.Action.UP,
        ale_py.Action.RIGHT,
        ale_py.Action.LEFT,
        ale_py.Action.DOWN,
        ale_py.Action.UPRIGHT,
        ale_py.Action.UPLEFT,
        ale_py.Action.DOWNRIGHT,
        ale_py.Action.DOWNLEFT,
        ale_py.Action.UPFIRE,
        ale_py.Action.RIGHTFIRE,
        ale_py.Action.LEFTFIRE,
        ale_py.Action.DOWNFIRE,
        ale_py.Action.UPRIGHTFIRE,
        ale_py.Action.UPLEFTFIRE,
        ale_py.Action.DOWNRIGHTFIRE,
        ale_py.Action.DOWNLEFTFIRE,
    ],
    lives=5,
    modes=[0, 8, 16, 24],
    difficulties=[0],
)


__all__ = [
    "Adventure",
    "AirRaid",
    "Alien",
    "Amidar",
    "Assault",
    "Asterix",
    "Asteroids",
    "Atlantis",
    "Atlantis2",
    "Backgammon",
    "BankHeist",
    "BasicMath",
    "BattleZone",
    "BeamRider",
    "Berzerk",
    "Blackjack",
    "Bowling",
    "Boxing",
    "Breakout",
    "Carnival",
    "Casino",
    "Centipede",
    "ChopperCommand",
    "CrazyClimber",
    "Crossbow",
    "Darkchambers",
    "Defender",
    "DemonAttack",
    "DonkeyKong",
    "DoubleDunk",
    "Earthworld",
    "ElevatorAction",
    "Enduro",
    "Entombed",
    "Et",
    "FishingDerby",
    "FlagCapture",
    "Freeway",
    "Frogger",
    "Frostbite",
    "Galaxian",
    "Gopher",
    "Gravitar",
    "Hangman",
    "HauntedHouse",
    "Hero",
    "HumanCannonball",
    "IceHockey",
    "Jamesbond",
    "JourneyEscape",
    "Kaboom",
    "Kangaroo",
    "KeystoneKapers",
    "KingKong",
    "Klax",
    "Koolaid",
    "Krull",
    "KungFuMaster",
    "LaserGates",
    "LostLuggage",
    "MarioBros",
    "MiniatureGolf",
    "MontezumaRevenge",
    "MrDo",
    "MsPacman",
    "NameThisGame",
    "Othello",
    "Pacman",
    "Phoenix",
    "Pitfall",
    "Pitfall2",
    "Pong",
    "Pooyan",
    "PrivateEye",
    "Qbert",
    "Riverraid",
    "RoadRunner",
    "Robotank",
    "Seaquest",
    "SirLancelot",
    "Skiing",
    "Solaris",
    "SpaceInvaders",
    "SpaceWar",
    "StarGunner",
    "Superman",
    "Surround",
    "Tennis",
    "Tetris",
    "TicTacToe3D",
    "TimePilot",
    "Trondead",
    "Turmoil",
    "Tutankham",
    "UpNDown",
    "Venture",
    "VideoCheckers",
    "VideoPinball",
    "Videochess",
    "Videocube",
    "WizardOfWor",
    "WordZapper",
    "YarsRevenge",
    "Zaxxon",
]
